# set application name
spring.application.name=pringboot3-profile-mng

# unset datasource name auto-generation, in order that a custom datasource name can be set (see other profiles' properties)
spring.datasource.generate-unique-name = false

# set current spring active profile ("dev" or "prod"), so that respective custom properties can be used (see other profiles'
# properties)
# the properties of this file will be called and later the properties of the respective active profile's properties file
# if the active profile property below is set as empty (no value), only this default properties file will be used, not
# the other specific profile's properties files
#spring.profiles.active = dev
#spring.profiles.active = prod

welcome.message = <b>Welcome All to</b> this Spring Boot 3 sample project: <b>Profile Manager REST API !</b></br></br>* This is a REST \
  Web Service Producer App, so you should access it through its Rest exposed endpoints and not from your browser web page. \
  Client apps can be created for this Rest Web Service, and these client apps then could be accessed through the final client \
  browser or through any other sort of client app or device. For this REST API documentation in HTML format, see link: \
  <a href="/swagger-ui/index.html#/">Documentation in HTML</a> . For this REST API documentation in JSON format, see link: \
  <a href="/v3/api-docs">Documentation in JSON</a> .</br></br>Created by:</br></br><b>Daniel Pinheiro</b></br>\
  <b><a href="https://danielpm1982.com">https://danielpm1982.com</a></b>

# custom Banner txt
spring.banner.location=banner.txt

# disable H2 console by default
spring.h2.console.enabled = false

# unexpose all actuator endpoints by default
management.endpoints.web.exposure.exclude = *

# disable docker compose auto running by default
spring.docker.compose.enabled=false
